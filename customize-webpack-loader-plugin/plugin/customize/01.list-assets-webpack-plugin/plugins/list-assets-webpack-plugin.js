class ListAssetsWebpackPlugin {
    apply(compiler) {
        console.log('========== [ListAssetsWebpackPlugin::apply] ==========');
        compiler.hooks.emit.tapAsync('ListAssetsWebpackPlugin', (compilation, cb) => {
            console.log('========== [ListAssetsWebpackPlugin::apply::compiler.hooks.emit.tapAsync] ==========', Object.keys(compilation.assets));
            const assets = Object.keys(compilation.assets).join('\n');

            const source = new compiler.webpack.sources.RawSource(assets);

            compilation.emitAsset('asset-list.md', source, {
                test: 'aaa'
            });

            compilation.chunks.forEach(function (chunk) {
                // Explore each module within the chunk (built inputs):
                // chunk.forEachModule(function (module) {
                //     // Explore each source file path that was included into the module:
                //     module.fileDependencies.forEach(function (filepath) {
                //         // we've learned a lot about the source structure now...
                //     });
                // });
                chunk.getModules().forEach((module) => {
                    console.log(`>>>>>>>>>> ${module} dependencies are: >>>>>>>>>>`)
                    module.dependencies.forEach((dep) => {
                        console.log(dep.request);
                    })
                })

                // Explore each asset filename generated by the chunk:
                chunk.files.forEach(function (filename) {
                    // Get the asset source for each file generated by the chunk:
                    var source = compilation.assets[filename].source();
                });
            });

            cb(null);
        })
    }
}

module.exports = ListAssetsWebpackPlugin;